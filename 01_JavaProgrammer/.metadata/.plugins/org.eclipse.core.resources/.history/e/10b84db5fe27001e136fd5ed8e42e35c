package com.capgemini.fulltech.classes;

import java.text.NumberFormat;

import com.capgemini.fulltech.enumeracoes.Sexos;
import com.capgemini.fulltech.interfaces.Documento;

public class Funcionario extends Pessoa{
	
	private String cargo;
	private double salario;
	private double irpf;
	private Documento documento;
	
	public Funcionario(String nome, String cargo, Documento documento) {
		super(nome);
		this.setCargo(cargo);
		this.setDocumento(documento);
	}
	
	public Funcionario(String nome, int idade, Sexos sexo, String cargo) {
		super(nome, idade, sexo);
		this.setCargo(cargo);
	}
	public Funcionario(String nome, int idade, Sexos sexo, String cargo, double salario) {
		this(nome, idade, sexo, cargo);
		this.setSalario(salario);
	}

	public String getCargo() {
		return cargo;
	}

	public void setCargo(String cargo) {
		this.cargo = cargo;
	}

	public double getSalario() {
		return salario;
	}

	public void setSalario(double salario) {
		this.salario = salario;
		this.irpf = calcularIrpf();
	}
	
	public Documento getDocumento() {
		return documento;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	@Override
	public String getDados() {
		NumberFormat nf = NumberFormat.getCurrencyInstance();
		
		StringBuilder sb = new StringBuilder().append(super.getDados())
				.append("\n\nCargo: ").append(this.getCargo())
				.append("\nSalÃ¡rio: ").append(nf.format(this.getSalario()))
				.append("\nIRPF: ").append(nf.format(this.getIrpf()))
				.append("\nDocumento: ").append(this.getDocumento().getInfoDocumento());
		
		return sb.toString();
	}
	
	public double getIrpf() {
		return irpf;
	}

	private double calcularIrpf() {
		double descontos[] = {0, 7.5, 15, 22.5, 27.5};
		double faixas[] = {0, 1903.98, 2826.65, 3751.05, 4664.68};
		double baseCalculo = this.getSalario();
		double imposto = 0;
		
		for (int i = descontos.length - 1; i > 0; i--) {
			if(baseCalculo > faixas[i]) {
				imposto += (baseCalculo - faixas[i]) * descontos[i] / 100;
				System.out.println("Imposto na Faixa: " + faixas[i] + " = " + imposto);
				baseCalculo = faixas[i];
			}
		}
		
		return imposto;
	}
	
}
